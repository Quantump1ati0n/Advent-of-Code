import javax.swing.event.CellEditorListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class Day5Part2 {

    public static void main(String args[]) throws FileNotFoundException {

        //Creating the file object
        File input = new File("C:/Users/aliso/OneDrive/Desktop/input5.txt");

        //Creating a Scanner object
        Scanner scanner = new Scanner(input);

        //initialize stacks
        ArrayList<Character> stackOne = new ArrayList<>();
        ArrayList<Character> stackTwo = new ArrayList<>();
        ArrayList<Character> stackThree = new ArrayList<>();

        //add elements to stack one
        char[] stackOneFill = {'Q','W','P','S','Z','R','H','D'};
        for (char character : stackOneFill) {
            stackOne.add(character);
        }

        //add elements to stack two
        char[] stackTwoFill = {'V','B','R','W','Q','H','F'};
        for (char character : stackTwoFill) {
            stackTwo.add(character);
        }

        //add elements to stack three
        char[] stackThreeFill = {'C','V','S','H'};
        for (char character : stackThreeFill) {
            stackThree.add(character);
        }

        //add elements to stack four
        char[] stackFourFill = {'C','V','S','H'};
        for (char character : stackFourFill) {
            stackFour.add(character);
        }

        while (scanner.hasNext()) {
            String line = scanner.nextLine();

            //extract how many crates to move
            int indexOfFirstSpace = line.indexOf(' ');
            int indexOfSecondSpace = line.indexOf(' ', indexOfFirstSpace + 1);
            String crates = line.substring(indexOfFirstSpace + 1, indexOfSecondSpace);
            int cratesToMove = Integer.parseInt(crates);

            //extract initial stack
            int indexOfThirdSpace = line.indexOf(' ', indexOfSecondSpace + 1);
            int indexOfFourthSpace = line.indexOf(' ', indexOfThirdSpace + 1);
            String from = line.substring(indexOfThirdSpace + 1, indexOfFourthSpace);
            int initialStack = Integer.parseInt(from);

            //extract ending stack
            int indexOfFifthSpace = line.indexOf(' ', indexOfFourthSpace + 1);
            String to = line.substring(indexOfFifthSpace + 1, line.length());
            int endStack = Integer.parseInt(to);

            //complete instruction
            //1. get the last 'cratesToMove' elements from initial stack and add to new list
            ArrayList<Character> elementsToMove = new ArrayList<>();
            if (initialStack == 1) {
                for (int i = cratesToMove; i >= 1; i--) {
                    elementsToMove.add(stackOne.get(stackOne.size() - i));
                }
            } else if (initialStack == 2) {
                for (int i = cratesToMove; i >= 1; i--) {
                    elementsToMove.add(stackTwo.get(stackTwo.size() - i));
                }
            } else if (initialStack == 3) {
                for (int i = cratesToMove; i >= 1; i--) {
                    elementsToMove.add(stackThree.get(stackThree.size() - i));
                }
            }

            //2. iterate over list and add the elements to end stack
            if (endStack == 1) {
                for (char character : elementsToMove) {
                    stackOne.add(character);
                }
            } else if (endStack == 2) {
                for (char character : elementsToMove) {
                    stackTwo.add(character);
                }
            } else if (endStack == 3) {
                for (char character : elementsToMove) {
                    stackThree.add(character);
                }
            }

            //3. delete the elements from the initial stack
            if (initialStack == 1) {
                for (int i = cratesToMove; i >= 1; i--) {
                    int last = stackOne.size() - 1;
                    stackOne.remove(last);
                }
            } else if (initialStack == 2) {
                for (int i = cratesToMove; i >= 1; i--) {
                    int last = stackTwo.size() - 1;
                    stackTwo.remove(last);
                }
            } else if (initialStack == 3) {
                for (int i = cratesToMove; i >= 1; i--) {
                    int last = stackTwo.size() - 1;
                    stackTwo.remove(last);
                }
            }

            System.out.println(stackOne);
            System.out.println(stackTwo);
            System.out.println(stackThree);

        }
//        System.out.println(stackOne.get(stackOne.size() - 1));
//        System.out.println(stackTwo.get(stackTwo.size() - 1));
//        System.out.println(stackThree.get(stackThree.size() - 1));
//        System.out.println(stackFour.get(stackFour.size() - 1));
//        System.out.println(stackFive.get(stackFive.size() - 1));
//        System.out.println(stackSix.get(stackSix.size() - 1));
//        System.out.println(stackSeven.get(stackSeven.size() - 1));
//        System.out.println(stackEight.get(stackEight.size() - 1));
//        System.out.println(stackNine.get(stackNine.size() - 1));
    }
}
